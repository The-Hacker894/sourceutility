#!/bin/sh 

clear
VER="0.3"
echo "sourceutility v" $VER

## ----------------------------------
# Step #1: Define variables
# ----------------------------------
RED='\033[0;41;30m'
STD='\033[0;0;39m'
ROOT="/"
SOURCEUTILITYDIR="/sourceutility"
SOURCEUTILITYTMP="/sourceutility/tmp"
SOURCEBACKUPDIR="$SOURCEUTILITYDIR/backupsources/"
CYDIASOURCEBACKUPDIR="$SOURCEBACKUPDIR/cydia"
SILEOSOURCEBACKUPDIR="$SOURCEBACKUPDIR/sileo"
CYDIASOURCEBACKUP="$CYDIASOURCEBACKUPDIR/com.saurik.Cydia.plist"
SILEOSOURCEBACKUP="$SILEOSOURCEBACKUPDIR/sileo.sources"
CYDIALISTS="/private/var/mobile/Library/Caches/com.saurik.Cydia/lists"
CYDIACHACHESTATE="/private/var/mobile/Library/Caches/com.saurik.Cydia/CacheState.plist"
CYDIACACHE="/private/var/mobile/Library/Caches/com.saurik.Cydia"
CYDIASOURCESCACHE="/private/var/mobile/Library/Caches/com.saurik.Cydia/sources.list"
CYDIADIR="/private/var/mobile/Library/Preferences"
CYDIASOURCES="/private/var/mobile/Library/Preferences/com.saurik.Cydia.plist"
SILEODIR="/etc/apt/sources.list.d"
SILEOSOURCES="/etc/apt/sources.list.d/sileo.sources"
APTDIR="/private/var/lib/apt"
LOCKFILE="/private/var/lib/apt/lock"
MORECYDIACACHE="/private/var/mobile/Containers/Data/Application/DBA6B427-BEBD-4C95-9F75-BF4830276BF3/Library/Caches/com.saurik.Cydia"
# ----------------------------------
# Step #2: User defined function
# ----------------------------------
pause(){
  read -p "Press [Enter] to continue..." fackEnterKey
}

coming_soon(){
   read -p "This feature is coming soon. Press [Enter/Return] to continue" fackEnterKey
}

init(){
    if [ ! -w $ROOT ]
    then
	# Root directory is not writeable
        echo "${RED}Cannot write to root directory. Try running as root?${STD}"
        pause
        start_menu
    fi

    if [ ! -d $SOURCEUTILITYDIR ]
    then
        mkdir $SOURCEUTILITYDIR
    fi
    
}

update_sources() {
    echo "Updating source lists. This may take a while..." && sleep 2
    apt-get update
}
remove_cydia_lists_sources() {
    echo ""
    echo ""
    echo ""
    echo "I had some issues during testing related to deleting and restoring sources and lists within Cydia. If you want to try this for yourself, go ahead."
    read -p "Are you sure you want to continue? [Y/N] " -n 1 -r
                        echo    # (optional) move to a new line
                        if [[ $REPLY =~ ^[Yy]$ ]]
                        then
                            read -p "Are you REALLY sure you want to continue? [Y/N] " -n 1 -r
                                echo    # (optional) move to a new line
                                if [[ $REPLY =~ ^[Yy]$ ]]
                                then
                                    echo "Type 'leavemealone' (ofc w/ out the quotes) and press enter to proceed:"
                                        read msg

                                        if [ $msg = "leavemealone" ]
                                        then
                                            echo "Deleting target sources..."
                                            rm -r $CYDIASOURCES
                                            echo "Deleting Cydia cache..."
                                            rm -r $CYDIASOURCESCACHE
                                            rm -r $MORECYDIACACHE
                                            echo "Deleting Cydia lists..."
                                            rm -r $CYDIALISTS
                                            echo "Deleting Cydia lists.bak ..."
                                            rm -r "${CYDIALISTS}.bak"
                                            echo "Deleting Cydia Cache State..."
                                            rm -r $CYDIACHACHESTATE
                                            echo "Deleting contents of apt directory..."
                                            find $APTDIR -type f -not -name $LOCKFILE
                                            echo "Finished Purging Cydia Lists and Sources!"
                                        else
                                            echo "You didn't type 'leavemealone' correctly..."
                                            pause
                                            start_menu
                                        fi
                                else
                                    start_menu
                                fi
                        else
                            start_menu
                        fi
}

delete_source_backups(){
    if [ ! -w $ROOT ]
    then
	# Root directory is not writeable
        echo "${RED}Cannot write to root directory. Try running as root?${STD}"
        pause
        start_menu
    fi
    if [ ! -w $SOURCEUTILITYDIR ]
    then
	# Root directory is not writeable
        echo "${RED}Cannot write to ${SOURCEUTILITYDIR}. Try running as root?${STD}"
        pause
        start_menu
    fi
    cd $SOURCEUTILITYDIR
    find . -name "*.zip" -type f -delete
    echo "Finished deleting source backups!"
    pause
}

backup_sources() {
    # sourcebackup by TheHacker 
DATE=$(date +%m-%d-%Y)
SOURCEBACKUPZIP="$SOURCEUTILITYDIR/backupsources-$DATE.zip"
SOURCECACHEZIP="$SOURCEUTILITYDIR/backupsources-cache-$DATE.zip"

SILEOBACKEDUP=false
CYDIABACKEDUP=false
BACKUPCYDIA=true
BACKUPSILEO=true

init

if [ ! -w $ROOT ]
then
	# Root directory is not writeable
	echo "${RED}Cannot write to root directory. Try running as root?${STD}"
	pause
    start_menu
fi


if [ ! -d  $SOURCEBACKUPDIR ]
then

mkdir $SOURCEBACKUPDIR

# If the Source Backup Directory doesn't already exist, create one
echo "Created backup directory!"		
fi

echo "Checking for Cydia Sources..."

{

if [ $BACKUPCYDIA ]
then
	if [ -d $CYDIADIR ]
	then
		# Cydia directory exists
		if [ -r $CYDIASOURCES ]
		then
			# Cydia sources are readable
			if [ ! -d $CYDIASOURCEBACKUPDIR ]
			then
			
			mkdir $CYDIASOURCEBACKUPDIR
			
			# If the Cydia Source Backup Directory doesn't already exist, create one
			echo "Found Cydia Sources and created backup directory!"
			fi
			
			echo "Attempting to backup Cydia Sources..."
			cp -r $CYDIASOURCES $CYDIASOURCEBACKUPDIR
			echo "Backed up Cydia Sources to " $CYDIASOURCEBACKUPDIR
			CYDIABACKEDUP=true
            echo ""
            echo ""
            echo ""
            echo "Restoring Cydia Sources has been disabled due to multiple issues regarding cache files."
            pause
		else
			echo "Cannot read Cydia Sources!"
			
		fi	
		
	else
		echo $CYDIADIR " not found!"
		
	fi
else 
	CYDIABACKEDUP=false
fi
} || {
    echo "${RED}An exception occurred... Try running as root?${STD}"
}

echo "Checking for Sileo Source Directory..."
if [ $BACKUPSILEO ]
then
	if [ -d $SILEODIR ]
	then
		# Sileo source directory exists
		if [ -r $SILEOSOURCES ]
		then
			if [ ! -d $SILEOSOURCEBACKUPDIR ]
			then
			
			mkdir $SILEOSOURCEBACKUPDIR
			
			# If Sileo Source Backup Directory doesn't already exist, create one
			echo "Found Sileo Sources and created backup directory!"
			fi
			
			echo "Attempting to backup Sileo Sources"
			cp -r $SILEOSOURCES $SILEOSOURCEBACKUPDIR
			echo "Backed up Sileo Sources to " $SILEOSOURCEBACKUPDIR
			SILEOBACKEDUP=true
		else
			echo "Cannot read Sileo Sources!"
			
		fi
	else 
		echo $SILEODIR " not found!"
		
	fi
else 
	SILEOBACKEDUP=false
fi



zip -r $SOURCEBACKUPZIP $SOURCEBACKUPDIR 

echo "Finished backing up sources! You can find the archive at " $SOURCEBACKUPZIP
pause

}

purge_ds_store() {
    if [ ! -w $ROOT ]
    then
        # Root directory is not writeable
        echo "${RED}Cannot write to root directory. Try running as root?${STD}"
        pause
        start_menu
    fi
    echo "Looking for .DS_STORE files to purge..."
    cd /
    find . -name '.DS_Store' -delete
    echo "Finished pruging .DS_STORE files!"
    pause
}
restore_sources() {
	if [ ! -w $ROOT ]
	then
		# Root directory is not writeable
		echo "${RED}Cannot write to root directory. Try running as root?${STD}"
		pause
        start_menu
	fi
    if [ -d $SOURCEUTILITYTMP ]
    then
        rm -r $SOURCEUTILITYTMP
    fi
    if [ ! -d $SOURCEUTILITYTMP ]
    then
        mkdir $SOURCEUTILITYTMP
    fi

	if [ -w $SOURCEUTILITYDIR ]
	then

        restore() {
            ls /sourceutility/backupsources*.zip
            echo "Enter the date of which backup you would like to restore: (Type 'exit' to leave.)"
                read backupDate

                BACKUPTOUNZIP="$SOURCEUTILITYDIR/backupsources-$backupDate.zip"
            if [[ "$backupDate" = 'exit' || "$backupDate" = 'leave' || "$backupDate" = "cancel" || "$backupDate" = "stop" ]]
            then
            start_menus
            fi
            if [ -w $BACKUPTOUNZIP ]
            then
                echo "Copying Backup to $SOURCEUTILITYTMP for contingency..."
                cp -r $BACKUPTOUNZIP $SOURCEUTILITYTMP
                echo "Unzipping..."
                unzip -o ${BACKUPTOUNZIP}
                echo "Unzipped!"

                cydia() {
                    if [ -w $CYDIASOURCEBACKUP ]
                then
                    echo "Cydia Source backup found!" && sleep 1
                    echo "To restore a Cydia Backup, the target sources at ${CYDIASOURCES} must be temporarily deleted."
                    read -p "Are you sure you want continue? [Y/N] " -n 1 -r
                        echo    # (optional) move to a new line
                        if [[ $REPLY =~ ^[Yy]$ ]]
                        then
                            remove_cydia_lists_sources #prob. wanna remove this
                            echo "Restoring..."
                            mv $CYDIASOURCEBACKUP $CYDIADIR
                            echo "Restored Cydia sources!" && sleep 1
                            
                            echo "Finished Cydia source restore process!"
                        else
                            start_menu
                        fi

                    
                else
                    echo "No Cydia Source Backup!"
                fi
                }
                echo ""
                echo ""
                echo ""
                
                echo "Cydia Source Restoration has been disabled."
                pause
                if [ -w $SILEOSOURCEBACKUP ]
                then
                    echo "Sileo Source backup found!" && sleep 1
                    echo "Restoring..."
                    mv $SILEOSOURCEBACKUP $SILEODIR
                    echo "Restored Sileo Sources!"
                else
                    echo "No Sileo Source Backup!"
                fi
            rm -r $SOURCEBACKUPDIR
            else
                echo "Cannot write to ${BACKUPTOUNZIP}. Does it exist?"
            fi
            
        }
        restore
    else
    echo "Cannot write to ${SOURCEUTILITYDIR}. Try running as root?"
    pause
    start_menu
	fi

	pause
}

sync_cydia_to_sileo() {
    coming_soon
}
sync_sileo_to_cydia() {
    coming_soon
}

hard_respring() {
    echo "Do NOT close terminate this script until your iOS Device has resprung."
    echo "Respringing..."
    ldrestart
    exit 0;
}
kill_springboard() {
    echo "Killing springboard..." && sleep 1
    killall SpringBoard
    exit 0;
}


# function to display start menus
show_menus() {
	clear
    echo ""
    echo ""
	echo ""
    echo ""
    echo ""
    echo ""
	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"	
	echo " sourceutility ${VER} by TheHacker "
    echo ""
    echo "~~ Start Menu ~~"
	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
	echo "1. Backup Cydia and/or Sileo Sources"
    echo "2. Restore Sileo Sources"
    echo "3. Delete Cydia/Sileo Source Backups"
	echo "4. Sync Cydia Sources to Sileo"
    echo "5. Sync Sileo Sources to Cydia"
    echo "6. Utilities Menu"
	echo "0. Exit"
    echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
}

read_options(){
	local choice
	read -p "Enter choice [ 0 - 6 ] " choice
	case $choice in
		1) { 
            backup_sources 
            } || { 
                exit 1;
                } ;;
        2) {
            restore_sources
            } || {
                exit 1;
            } ;;
        3) {
            delete_source_backups
            } || {
                exit 1;
            } ;;
		4) {
            sync_cydia_to_sileo
            } || {
                exit 1;
            } ;;
		5) {
            sync_sileo_to_cydia
            } || {
                exit 1;
            } ;;
        6) {
            utilies_menu
        } || {
            exit 1;
        } ;;
        0) exit 0;;
		*) echo -e "${RED}Invalid Option...${STD}" && sleep 2
	esac
}
# function to display start menus
show_u_menus() {
	clear
    echo ""
    echo ""
	echo ""
    echo ""
    echo ""
    echo ""
	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"	
	echo " sourceutility ${VER} by TheHacker "
    echo ""
    echo "~~ Utilities Menu ~~"
	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
	echo "1. ldrestart"
    echo "2. Kill Springboard"
    echo "3. Purge .DS_STORE files"
    echo "4. Purge Cydia Lists & Sources"
    echo "5. Start Menu"
    echo "0. Exit"
    echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
}

read_u_options(){
	local choice
	read -p "Enter choice [ 0 - 5 ] " choice
	case $choice in
		1) { 
            hard_respring 
            } || { 
                exit 1;
                } ;;
        2) {
            kill_springboard
            } || {
                echo -e "Could not kill springboard. Try running as root?" && sleep 2
            } ;;
        3) {
            purge_ds_store
            } || {
                exit 1;
            } ;;
		4) {
            remove_cydia_lists_sources 
            } || {
                exit 1;
            } ;;
		5) {
            start_menu
            } || {
                exit 1;
            } ;;
        0) exit 0;;
		*) echo -e "${RED}Invalid Option...${STD}" && sleep 2
	esac
}
 
# ----------------------------------------------
# Step #3: Trap CTRL+C, CTRL+Z and quit singles
# ----------------------------------------------
trap '' SIGINT SIGQUIT SIGTSTP
 
# -----------------------------------
# Step #4: Main logic - infinite loop
# ------------------------------------

start_menu() {
    show_menus
	read_options
}
utilies_menu() {
    show_u_menus
    read_u_options
}
while true
do
 start_menu
	
done